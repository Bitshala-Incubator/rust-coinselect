pub fn calc_waste_metric(
    inp_weight: u32,
    target_feerate: f32,
    longterm_feerate: Option<f32>,
    drain_weight: u32,
    totalvalue: u64,
    target_value: u64,
) -> u64 {
    match longterm_feerate {
        Some(fee) => {
            let change: f32 = drain_weight as f32 * fee;
            let excess: u64 = totalvalue - target_value;

            (inp_weight as f32 * (target_feerate - fee) + change + excess as f32).ceil() as u64
        }
        None => {
            let waste_score: u64 = 0;
            waste_score
        }
    }
}